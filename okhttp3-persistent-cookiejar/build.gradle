apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'

group='com.github.franmontiel'

android {
    compileSdkVersion rootProject.ext.compileSdkVer
    buildToolsVersion rootProject.ext.buildToolsVer

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVer
        targetSdkVersion rootProject.ext.targetSdkVer
        versionCode 1
        versionName "1.0"
        consumerProguardFiles 'proguard-rules.pro'
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile "com.squareup.okhttp3:okhttp:${rootProject.ext.okHttpVer}"

    testCompile "junit:junit:${rootProject.ext.junitVer}"
    testCompile 'org.robolectric:robolectric:3.2.2'
    testCompile 'org.mockito:mockito-core:2.2.0'
}

// build a jar with source files
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    failOnError  false
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.compile
}

// build a jar with javadoc
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

